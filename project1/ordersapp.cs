///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace project1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ordersapp recording.
    /// </summary>
    [TestModule("d935ab58-b1e3-42bc-83f2-c5bebf7f87f1", ModuleType.Recording, 1)]
    public partial class ordersapp : ITestModule
    {
        /// <summary>
        /// Holds an instance of the project1Repository repository.
        /// </summary>
        public static project1Repository repo = project1Repository.Instance;

        static ordersapp instance = new ordersapp();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ordersapp()
        {
            customer = "customer";
            city = "ejthe";
            street = "customer";
            state = "hdr";
            zip = "56565656";
            cardno = "12132323456";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ordersapp Instance
        {
            get { return instance; }
        }

#region Variables

        string _customer;

        /// <summary>
        /// Gets or sets the value of variable customer.
        /// </summary>
        [TestVariable("b26ed4dd-499f-4082-bfca-886587871334")]
        public string customer
        {
            get { return _customer; }
            set { _customer = value; }
        }

        string _city;

        /// <summary>
        /// Gets or sets the value of variable city.
        /// </summary>
        [TestVariable("2d69c9c5-5f7e-4e28-a81b-1a232f0bab2b")]
        public string city
        {
            get { return _city; }
            set { _city = value; }
        }

        string _street;

        /// <summary>
        /// Gets or sets the value of variable street.
        /// </summary>
        [TestVariable("3d7f8ee8-2376-42f1-995f-8f5d49517134")]
        public string street
        {
            get { return _street; }
            set { _street = value; }
        }

        string _state;

        /// <summary>
        /// Gets or sets the value of variable state.
        /// </summary>
        [TestVariable("a5e3445b-8324-4e90-b192-c665cf37979a")]
        public string state
        {
            get { return _state; }
            set { _state = value; }
        }

        string _zip;

        /// <summary>
        /// Gets or sets the value of variable zip.
        /// </summary>
        [TestVariable("fed9b254-bf9f-4150-ad76-8791c9f56f9a")]
        public string zip
        {
            get { return _zip; }
            set { _zip = value; }
        }

        string _cardno;

        /// <summary>
        /// Gets or sets the value of variable cardno.
        /// </summary>
        [TestVariable("de0fdfba-4541-48bf-b2df-13b2a8b05ecc")]
        public string cardno
        {
            get { return _cardno; }
            set { _cardno = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Users\\Public\\Documents\\TestComplete 11 Samples\\Desktop\\Orders\\C#\\bin\\Release\\Orders.exe' with arguments '' in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication("C:\\Users\\Public\\Documents\\TestComplete 11 Samples\\Desktop\\Orders\\C#\\bin\\Release\\Orders.exe", "", "C:\\Users\\Public\\Documents\\TestComplete 11 Samples\\Desktop\\Orders\\C#\\bin\\Release", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.Orders' at 13;10.", repo.MainForm.OrdersInfo, new RecordItemIndex(1));
            repo.MainForm.Orders.Click("13;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Orders.NewOrderCtrlPlusIns' at 43;13.", repo.Orders.NewOrderCtrlPlusInsInfo, new RecordItemIndex(2));
            repo.Orders.NewOrderCtrlPlusIns.Click("43;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.ProductNames' at 58;15.", repo.OrderForm.ProductNamesInfo, new RecordItemIndex(3));
            repo.OrderForm.ProductNames.Click("58;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'List1000.FamilyAlbum' at 46;12.", repo.List1000.FamilyAlbumInfo, new RecordItemIndex(4));
            repo.List1000.FamilyAlbum.Click("46;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.UpDownEdit' at 21;4.", repo.OrderForm.UpDownEditInfo, new RecordItemIndex(5));
            repo.OrderForm.UpDownEdit.Click("21;4");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2' with focus on 'OrderForm.UpDownEdit'.", repo.OrderForm.UpDownEditInfo, new RecordItemIndex(6));
            repo.OrderForm.UpDownEdit.PressKeys("2");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.Text' at 59;7.", repo.OrderForm.TextInfo, new RecordItemIndex(7));
            repo.OrderForm.Text.Click("59;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$customer' with focus on 'OrderForm.Text'.", repo.OrderForm.TextInfo, new RecordItemIndex(8));
            repo.OrderForm.Text.PressKeys(customer);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.Date' at 45;3.", repo.OrderForm.DateInfo, new RecordItemIndex(9));
            repo.OrderForm.Date.Click("45;3");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$street' with focus on 'OrderForm.Date'.", repo.OrderForm.DateInfo, new RecordItemIndex(10));
            repo.OrderForm.Date.PressKeys(street);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.Text1' at 22;6.", repo.OrderForm.Text1Info, new RecordItemIndex(11));
            repo.OrderForm.Text1.Click("22;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$city' with focus on 'OrderForm.Text1'.", repo.OrderForm.Text1Info, new RecordItemIndex(12));
            repo.OrderForm.Text1.PressKeys(city);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.Text2' at 90;5.", repo.OrderForm.Text2Info, new RecordItemIndex(13));
            repo.OrderForm.Text2.Click("90;5");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$state' with focus on 'OrderForm.Text2'.", repo.OrderForm.Text2Info, new RecordItemIndex(14));
            repo.OrderForm.Text2.PressKeys(state);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.Text3' at 28;7.", repo.OrderForm.Text3Info, new RecordItemIndex(15));
            repo.OrderForm.Text3.Click("28;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$zip' with focus on 'OrderForm.Text3'.", repo.OrderForm.Text3Info, new RecordItemIndex(16));
            repo.OrderForm.Text3.PressKeys(zip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.MasterCard' at 6;10.", repo.OrderForm.MasterCardInfo, new RecordItemIndex(17));
            repo.OrderForm.MasterCard.Click("6;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.Street' at 34;7.", repo.OrderForm.StreetInfo, new RecordItemIndex(18));
            repo.OrderForm.Street.Click("34;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$cardno' with focus on 'OrderForm.Street'.", repo.OrderForm.StreetInfo, new RecordItemIndex(19));
            repo.OrderForm.Street.PressKeys(cardno);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OrderForm.ButtonOK' at 34;11.", repo.OrderForm.ButtonOKInfo, new RecordItemIndex(20));
            repo.OrderForm.ButtonOK.Click("34;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.PushButton' at 9;10.", repo.MainForm.PushButtonInfo, new RecordItemIndex(21));
            repo.MainForm.PushButton.Click("9;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.ButtonSave' at 29;8.", repo.SaveAs.ButtonSaveInfo, new RecordItemIndex(22));
            repo.SaveAs.ButtonSave.Click("29;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.Close' at 17;13.", repo.MainForm.CloseInfo, new RecordItemIndex(23));
            repo.MainForm.Close.Click("17;13");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
